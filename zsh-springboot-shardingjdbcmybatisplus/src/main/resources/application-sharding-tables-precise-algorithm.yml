spring:
  shardingsphere:
    datasource:
      names: ds
      ds:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://106.54.211.146:3307/ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: aq1sw2de
    sharding:
      binding-tables: t_order, t_order_item
#      broadcast-tables: t_address
      tables:
        t_order:
          actual-data-nodes: ds.t_order_$->{0..1}
          table-strategy:
            standard:
              sharding-column: order_id
              precise-algorithm-class-name: zsh.springboot.shardingjdbcmybatisplus.sharding.PreciseShardingTableAlgorithmImpl
              range-algorithm-class-name: zsh.springboot.shardingjdbcmybatisplus.sharding.RangeShardingTableAlgorithmImpl
#            range:
#              sharding-column: order_id
#              range-algorithm-class-name: zsh.springboot.shardingjdbcmybatisplus.sharding.RangeShardingTableAlgorithmImpl
          key-generator:
            column: order_id
            type: SNOWFLAKE
            props:
              worker:
                id: 123
        t_order_item:
          actual-data-nodes: ds.t_order_item_$->{0..1}
          table-strategy:
            standard:
              sharding-column: order_id
              precise-algorithm-class-name: zsh.springboot.shardingjdbcmybatisplus.sharding.PreciseShardingTableAlgorithmImpl
              range-algorithm-class-name: zsh.springboot.shardingjdbcmybatisplus.sharding.RangeShardingTableAlgorithmImpl
#            range:
#              sharding-column: order_id
#              range-algorithm-class-name: zsh.springboot.shardingjdbcmybatisplus.sharding.RangeShardingTableAlgorithmImpl
          key-generator:
            column: order_item_id
            type: SNOWFLAKE
            props:
              worker:
                id: 123
